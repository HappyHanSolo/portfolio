{"ast":null,"code":"var _jsxFileName = \"/Users/hanson/Documents/Hanson Main Quest/portfolio/src/components/Pages/Projects/ProjectOverview.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport fs from 'fs';\nimport path from 'path';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ProjectOverview() {\n  _s();\n  const [projectTitles, setProjectTitles] = useState([]);\n  useEffect(() => {\n    const directoryPath = path.join(__dirname, '../'); // Adjust path as necessary\n    fs.readdir(directoryPath, (err, files) => {\n      if (err) {\n        console.error('Unable to scan directory: ' + err);\n        return;\n      }\n      const titles = files.filter(file => file.endsWith('.js') && file !== 'ProjectOverview.js') // Exclude itself\n      .map(file => file.replace('.js', '')); // Remove .js extension\n      setProjectTitles(titles);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Project Titles\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: projectTitles.map(title => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: title\n      }, title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(ProjectOverview, \"wrVaxs8rxYkNM7+LHcJRC85idqw=\");\n_c = ProjectOverview;\nvar _c;\n$RefreshReg$(_c, \"ProjectOverview\");","map":{"version":3,"names":["React","useEffect","useState","fs","path","jsxDEV","_jsxDEV","Fragment","_Fragment","ProjectOverview","_s","projectTitles","setProjectTitles","directoryPath","join","__dirname","readdir","err","files","console","error","titles","filter","file","endsWith","map","replace","children","fileName","_jsxFileName","lineNumber","columnNumber","title","_c","$RefreshReg$"],"sources":["/Users/hanson/Documents/Hanson Main Quest/portfolio/src/components/Pages/Projects/ProjectOverview.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport fs from 'fs';\nimport path from 'path';\n\nexport default function ProjectOverview() {\n    const [projectTitles, setProjectTitles] = useState([]);\n\n    useEffect(() => {\n        const directoryPath = path.join(__dirname, '../'); // Adjust path as necessary\n        fs.readdir(directoryPath, (err, files) => {\n            if (err) {\n                console.error('Unable to scan directory: ' + err);\n                return;\n            }\n            const titles = files\n                .filter(file => file.endsWith('.js') && file !== 'ProjectOverview.js') // Exclude itself\n                .map(file => file.replace('.js', '')); // Remove .js extension\n            setProjectTitles(titles);\n        });\n    }, []);\n\n    return (\n        <>\n            <h1>Project Titles</h1>\n            <ul>\n                {projectTitles.map(title => (\n                    <li key={title}>{title}</li>\n                ))}\n            </ul>\n        </>\n    );\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,EAAE,MAAM,IAAI;AACnB,OAAOC,IAAI,MAAM,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExB,eAAe,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACtC,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtDD,SAAS,CAAC,MAAM;IACZ,MAAMY,aAAa,GAAGT,IAAI,CAACU,IAAI,CAACC,SAAS,EAAE,KAAK,CAAC,CAAC,CAAC;IACnDZ,EAAE,CAACa,OAAO,CAACH,aAAa,EAAE,CAACI,GAAG,EAAEC,KAAK,KAAK;MACtC,IAAID,GAAG,EAAE;QACLE,OAAO,CAACC,KAAK,CAAC,4BAA4B,GAAGH,GAAG,CAAC;QACjD;MACJ;MACA,MAAMI,MAAM,GAAGH,KAAK,CACfI,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,QAAQ,CAAC,KAAK,CAAC,IAAID,IAAI,KAAK,oBAAoB,CAAC,CAAC;MAAA,CACtEE,GAAG,CAACF,IAAI,IAAIA,IAAI,CAACG,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;MAC3Cd,gBAAgB,CAACS,MAAM,CAAC;IAC5B,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIf,OAAA,CAAAE,SAAA;IAAAmB,QAAA,gBACIrB,OAAA;MAAAqB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBzB,OAAA;MAAAqB,QAAA,EACKhB,aAAa,CAACc,GAAG,CAACO,KAAK,iBACpB1B,OAAA;QAAAqB,QAAA,EAAiBK;MAAK,GAAbA,KAAK;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAC9B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA,eACP,CAAC;AAEX;AAACrB,EAAA,CA3BuBD,eAAe;AAAAwB,EAAA,GAAfxB,eAAe;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}